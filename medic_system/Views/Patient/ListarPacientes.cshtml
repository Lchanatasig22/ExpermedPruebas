@model List<Paciente>
@{
    ViewData["Title"] = "Listar Pacientes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Lista de Pacientes</h3>

<div class="form-group">
    <div class="row">
        <div class="col-md-3">
            <label for="opcion">Buscar por</label>
            <select class="form-control" id="opcion" onchange="onSearchChanged()">
                <option value="-2">Listar todo</option>
                <option value="1">Nombre(s)</option>
                <option value="2">Número de documento</option>
                <option value="3">Email</option>
                <option value="4">Nacionalidad</option>
            </select>
        </div>
        <div class="col-md-5 d-none" id="buscarFields">
            <label>&nbsp;</label>
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Ingresar criterio de búsqueda" id="buscarCriterio" />
                <div class="input-group-append">
                    <button class="btn btn-primary" type="button" onclick="onSearch()">Buscar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<hr />

<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <thead>
            <tr class="table-primary">
                <th>Acciones</th>
                <th>Nombre</th>
                <th>Número de Documento</th>
                <th>Email</th>
                <th>Fecha Nacimiento</th>
                <th>Edad</th>
                <th>Nacionalidad</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var paciente in Model)
            {
                <tr id="paciente-@paciente.IdPacientes">
                    <td>
                        <a asp-action="EditarPaciente" asp-route-id="@paciente.IdPacientes" class="btn btn-outline-primary">
                            <i class="fa-regular fa-pen-to-square"></i> Revisar
                        </a>
                        <button type="button" class="btn btn-outline-danger" onclick="confirmarEliminar('@paciente.IdPacientes')">
                            <i class="fa-solid fa-trash"></i> Eliminar
                        </button>
                    </td>
                    <td>@paciente.PrimernombrePacientes @paciente.PrimerapellidoPacientes</td>
                    <td>@paciente.CiPacientes</td>
                    <td>@paciente.EmailPacientes</td>
                    <td>@paciente.FechanacimientoPacientes?.ToString("dd/MM/yyyy")</td>
                    <td>@paciente.EdadPacientes</td>
                    <td>@paciente.NacionalidadPacientesPaNavigation.GentilicioPais</td>
                </tr>
            }
        </tbody>
    </table>
    <div id="noResults" class="no-results d-none">
        No se encontraron resultados.
        <a asp-action="CrearPaciente" class="btn btn-outline-primary" style="margin-left:80%">
            <i class="fa fa-plus"></i> Añadir nuevo paciente
        </a>
    </div>
</div>

<a asp-action="CrearPaciente" class="btn btn-outline-primary" style="margin-left:80%">
    <i class="fa fa-plus"></i> Añadir nuevo paciente
</a>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const opcionSelect = document.getElementById('opcion');
            const buscarFields = document.getElementById('buscarFields');
            const buscarCriterio = document.getElementById('buscarCriterio');
            const noResults = document.getElementById('noResults');

            opcionSelect.addEventListener('change', onSearchChanged);

            function onSearchChanged() {
                if (opcionSelect.value === '-2') {
                    buscarFields.classList.add('d-none');
                    showAllRows();
                    noResults.classList.add('d-none');
                } else {
                    buscarFields.classList.remove('d-none');
                }
            }

            function onSearch() {
                const criterio = buscarCriterio.value.toLowerCase();
                const optionValue = opcionSelect.value;
                const rows = document.querySelectorAll('tbody tr');
                let found = false;

                rows.forEach(row => {
                    const cellValue = getCellValue(row, optionValue).toLowerCase();
                    if (cellValue.includes(criterio)) {
                        row.style.display = '';
                        found = true;
                    } else {
                        row.style.display = 'none';
                    }
                });

                noResults.classList.toggle('d-none', found);
            }

            function getCellValue(row, optionValue) {
                switch (optionValue) {
                    case '1': return row.cells[1].innerText;
                    case '2': return row.cells[2].innerText;
                    case '3': return row.cells[3].innerText;
                    case '4': return row.cells[6].innerText;
                    default: return '';
                }
            }

            function showAllRows() {
                const rows = document.querySelectorAll('tbody tr');
                rows.forEach(row => row.style.display = '');
            }

            window.confirmarEliminar = function (id) {
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "Esta acción no se puede deshacer.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        eliminarPaciente(id);
                    }
                });
            };

            function eliminarPaciente(id) {
                const form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("EliminarPaciente", "Patient")';

                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'id';
                input.value = id;

                form.appendChild(input);
                document.body.appendChild(form);
                form.submit();
            }

            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';

            if (successMessage) {
                Swal.fire({
                    icon: 'success',
                    title: 'Éxito',
                    text: successMessage
                });
            }

            if (errorMessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errorMessage
                });
            }
        });
    </script>
}
